// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LovePelmeni/OnlineStore/StoreService/models (interfaces: BaseModel)

// Package mock_models is a generated GoMock package.
package mock_models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBaseModel is a mock of BaseModel interface.
type MockBaseModel struct {
	ctrl     *gomock.Controller
	recorder *MockBaseModelMockRecorder
}

// MockBaseModelMockRecorder is the mock recorder for MockBaseModel.
type MockBaseModelMockRecorder struct {
	mock *MockBaseModel
}

// NewMockBaseModel creates a new mock instance.
func NewMockBaseModel(ctrl *gomock.Controller) *MockBaseModel {
	mock := &MockBaseModel{ctrl: ctrl}
	mock.recorder = &MockBaseModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseModel) EXPECT() *MockBaseModelMockRecorder {
	return m.recorder
}

// ApplyRestrictedFields mocks base method.
func (m *MockBaseModel) ApplyRestrictedFields() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyRestrictedFields")
	ret0, _ := ret[0].(bool)
	return ret0
}

// ApplyRestrictedFields indicates an expected call of ApplyRestrictedFields.
func (mr *MockBaseModelMockRecorder) ApplyRestrictedFields() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyRestrictedFields", reflect.TypeOf((*MockBaseModel)(nil).ApplyRestrictedFields))
}

// Create mocks base method.
func (m *MockBaseModel) Create(arg0 map[string]interface{}) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockBaseModelMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBaseModel)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockBaseModel) Delete(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockBaseModelMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockBaseModel)(nil).Delete), arg0)
}

// GetRestrictedFields mocks base method.
func (m *MockBaseModel) GetRestrictedFields() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRestrictedFields")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetRestrictedFields indicates an expected call of GetRestrictedFields.
func (mr *MockBaseModelMockRecorder) GetRestrictedFields() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRestrictedFields", reflect.TypeOf((*MockBaseModel)(nil).GetRestrictedFields))
}

// Update mocks base method.
func (m *MockBaseModel) Update(arg0 map[string]interface{}) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockBaseModelMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockBaseModel)(nil).Update), arg0)
}
