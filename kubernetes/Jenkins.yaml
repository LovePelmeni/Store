# Jenkins Server For Managing Continious Delivery / Integration / Deployment within the Kubernetes Cluster.
apiVersion: v1 
kind: PersistentVolume 
metadata:
  name: jenkins-persistent-volume 
  namespace: jenkins-namespace 
spec:
  StorageClassName: "jenkins-storage"
  accessModes:
    - ReadWriteOnce 
  resources:
    limits:
      cpu: "800m"
      memory: "2Gi"

  gcePersistentDisk:      # represents Link to Google Cloud Compute Disk..                      
    pgName: Jenkins-Disk  # You can create one by running: `gcloud compute disks create --zone=<your zone> --size=<your disk size>` 
    fsType: ext4

--- 

apiVersion: v1 
kind: PersistentVolumeClaim 
metadata: 
  name: jenkins-claim 
  namespace: jenkins-namespace 
spec:
  StorageClassName: "jenkins-storage" 
  accessModes:
    - readWriteOnce 
  requests:
    limits:
      cpu: "800m"
      memory: "1Gi"
    requests: 
      cpu: "800m"
      memory: "1Gi"

--- 

apiVersion: v1  # Service For handling Connection to the Jenkins Server...
kind: Service
metadata:
  name: jenkins-application-service 
  namespace: jenkins-namespace 
spec:
  selector:
    app: jenkins-internal-service 
  type: ClusterIP 
  ports:
    - name: httpport 
      port: 8080 
      targetPort: 8080

    - name: jnlpport 
      port: 50000 
      targetPort: 50000 

--- 

apiVersion: v1
kind: Deployment 
metadata:
  name: jenkins-server  
  namespace: jenkins-namespace 
spec:
  selector:
    matchLabels:
      app: jenkins-internal-service 
  template:
    metadata:
      labels:
        app: jenkins-internal-service 
    containers:
      - name: jenkins-server 
        image: crazycoderrr/jenkins_base # Custom Image That is already pre-configured.
        ports:
          - name: httpport
            containerPort: 8080 
            targetPort: 8080

          - name: jnlpport 
            containerPort: 50000 
            targetPort: 50000

        imagePullPolicy: Always 

        resources:
          limits:
            cpu: "2Gi"
            memory: "1000Mi"  

        livenessProbe:
          httpGet:
            path: login/ 
            port: 8080 
          initialDelaySeconds: 10 
          periodSeconds: 20 
          timeoutSeconds: 10 
        
        VolumeMounts:
          - MountPath: /var/jenkins_home/ 
            name: jenkins-volume-storage  

          - MountPath: /var/run/docker.sock  # for accessing Docker Socket...
            name: docker-socket-volume  

    Volumes:
      - name: jenkins-volume-storage 
        PersistentVolumeClaim:  
          - name: jenkins-claim 

      - name: docker-socket-volume
        value: /var/run/docker.sock 

        
