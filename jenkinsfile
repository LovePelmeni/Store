// Pipeline that Builds / Tests / Deploys the new Version of the Image.
pipeline {

    agent any 
    stages {

        stage("build"){

            steps{
                sh "echo 'Running Build Pipeline...'"
                sh "echo 'docker build . --name=new_store_application_image'"
                sleep 10 
                echo "Docker Built Image Successfully! And Initial Tests Has been Passed. 
                Going to the Testing Stage.."
            }
        }

        stage("test"){
            steps{
                // checking for application health..
                sh "echo 'Running Test Pipeline'"
                sh "echo 'Running Healtcheck Test...'"
                sh "echo 'curl -f http://${env.APPLICATION_HOST}:${env.APPLICATION_PORT}'"
                sh "echo 'Application Health State Is Okay... Running Other Tests...'"
                sh "echo 'All Tests Passed... Running Deployment Pipeline...'"
            }
        }

        stage("deployment"){

            steps{  
                load "./version_env.groovy"
                sh "Deploying New API Version: ${env.VERSION}"
                sh "echo 'Running Deployment Pipeline Stage...'"
                sh "echo 'Tagging new Image Version'"
                sh "echo 'docker tag new_store_application_image 
                crazycoderrr/store_service@${env.VERSION}'"
                sh "echo 'Tagged Successfully.. Pushing Image On Docker Hub..'"
                sh "echo 'docker push crazycoderrr/store_service@${env.VERSION}'"
                sh "echo 'Image has been Pushed Successfully! Pipeline Finished.'"
            }
        }
    }
}
